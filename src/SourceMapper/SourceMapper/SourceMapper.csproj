<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <IncludeBuildOutput>false</IncludeBuildOutput><!-- Do not include the generator as a lib dependency -->
    <VersionPrefix>0.1.1</VersionPrefix>
    <LangVersion>latest</LangVersion>
    <IsRoslynComponent>true</IsRoslynComponent>
    <Nullable>enable</Nullable>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageTags>source generator;automapper;cloning;clone;mapping</PackageTags>
    <PackageReleaseNotes>Initial release</PackageReleaseNotes>
    <Description>.Net source generator to generate code that creates mapping extensions for objects. Its like Automapper, but at compile time.</Description>
    <PackageProjectUrl>https://github.com/paiden/SourceMapper</PackageProjectUrl>
    <RepositoryUrl>https://github.com/paiden/SourceMapper</RepositoryUrl>
    <Authors>paiden</Authors>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="SourceMapperContext.cs.txt" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="SourceMapperContext.cs.txt">
      <WithCulture>false</WithCulture>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="CodegenCS" Version="1.0.7" GeneratePathProperty="true" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.2" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.0.0-2.final" PrivateAssets="all" />
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <None Include="$(PkgCodegenCS)\lib\netstandard2.0\*.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visble="false" />
  </ItemGroup>

  <Target Name="_AfterBeforeBuild" AfterTargets="BeforeBuild">
    <Copy SourceFiles="SourceMapperContext.cs" DestinationFiles="SourceMapperContext.cs.txt" />
  </Target>
</Project>
